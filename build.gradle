plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.diffplug.spotless' version '6.11.0'
}

group = 'com.layer1.clients'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = project.group
            artifactId = project.name
            version = project.version

            pom {
                name = 'layer1-sdk-java-auth'
                description = 'Java SDK for Layer 1 Authentication'
                url = 'https://github.com/bvnk/layer1-sdk-java-auth'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'bvnk'
                        name = 'BVNK'
                        email = 'layer1@bvnk.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/bvnk/layer1-sdk-java-auth.git'
                    developerConnection = 'scm:git:ssh://github.com/bvnk/layer1-sdk-java-auth.git'
                    url = 'https://github.com/bvnk/layer1-sdk-java-auth'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv("OSSRH_USERNAME")
                password = System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

spotless {
    java {
        googleJavaFormat()
    }
}

apply plugin: 'signing'

signing {
    useInMemoryPgpKeys(
        System.getenv("GPG_PRIVATE_KEY"),
        System.getenv("GPG_PASSPHRASE")
    )
    sign publishing.publications.mavenJava
}
